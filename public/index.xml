<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Toma Nistor</title>
    <link>https://tomanistor.com/index.xml</link>
    <description>Recent content on Toma Nistor</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Fri, 28 Apr 2017 11:32:36 -0700</lastBuildDate>
    <atom:link href="https://tomanistor.com/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Hugo Workflow</title>
      <link>https://tomanistor.com/posts/hugo-workflow/</link>
      <pubDate>Fri, 28 Apr 2017 11:32:36 -0700</pubDate>
      
      <guid>https://tomanistor.com/posts/hugo-workflow/</guid>
      <description>

&lt;p&gt;The Hugo workflow is fairly simple and straightforward.&lt;/p&gt;

&lt;p&gt;Inside of your Hugo project folder, the &lt;code&gt;public/&lt;/code&gt; folder is generated with all of your static site files once &lt;code&gt;hugo&lt;/code&gt; is run in the terminal.&lt;/p&gt;

&lt;h2 id=&#34;purge-and-serve&#34;&gt;Purge and Serve&lt;/h2&gt;

&lt;p&gt;To generate a new &lt;code&gt;public/&lt;/code&gt; folder, just remove the existing one and run the server. All updates you have made to your content and theme are now available in the new &lt;code&gt;public/&lt;/code&gt; folder and visible on the live server.&lt;/p&gt;

&lt;p&gt;Always make sure to remove the old &lt;code&gt;public/&lt;/code&gt; folder otherwise Hugo will continue to update existing files and add new files without removed old unused files. You definitely don&amp;rsquo;t want the clutter and confusion.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ rm -rf public/
$ hugo server --verbose
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;livereload&#34;&gt;LiveReload&lt;/h2&gt;

&lt;p&gt;My favorite feature in Hugo so far? LiveReload. The Hugo server automatically watches your project folder for changes and refreshes your browser when any new changes are made while editing, creating, or deleting files.&lt;/p&gt;

&lt;p&gt;This is great for development when you can make changes in your text editor and immediately see them occur in your browser window.&lt;/p&gt;

&lt;p&gt;If you want to disable LiveReload:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ hugo server --disableLiveReload
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;gulp-pipeline&#34;&gt;Gulp Pipeline&lt;/h2&gt;

&lt;p&gt;When making any styling changes or designing themes, I use a Gulp pipeline to compile my SCSS files into CSS files that can then be rendering into the &lt;code&gt;public/&lt;/code&gt; folder appropriately. Dan Bahrami has a &lt;a href=&#34;http://danbahrami.io/articles/building-a-production-website-with-hugo-and-gulp-js/&#34;&gt;great guide&lt;/a&gt; for setting up a Gulp pipeline and assigning Gulp tasks to watch for changes in style folders.&lt;/p&gt;

&lt;p&gt;To get the Gulp pipeline going after I start the Hugo server, I simply type:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ gulp
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;new-content&#34;&gt;New Content&lt;/h2&gt;

&lt;p&gt;Creating new content in the project folder is also very simple. For example, I created this page as a markdown file inside of &lt;code&gt;content/post/&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ hugo new post/hugo-workflow.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So far I&amp;rsquo;ve been enjoying writing blog posts in markdown.&lt;/p&gt;

&lt;h2 id=&#34;hugo-deploy&#34;&gt;Hugo Deploy&lt;/h2&gt;

&lt;p&gt;For deploying Hugo, I currently use &lt;a href=&#34;https://github.com/mindok/hugodeploy&#34;&gt;hugodeploy&lt;/a&gt;, a simple FTP/SFTP deployment tool built in Go. Content inside of &lt;code&gt;public/&lt;/code&gt; is effortlessly uploaded to my website&amp;rsquo;s root folder on my shared webhost account with two simple commands:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ hugodeploy preview
$ hugodeploy push
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A neat extra feature of hugodeploy is the minification of CSS, HTML, JavaScript, JSON, and XML files upon deployment. While this option can be turned off, it does help with file size and site speed.&lt;/p&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;All in all, my Hugo workflow is short and sweet. A typical update and publication to the live site can look like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ rm -rf public
$ hugo
$ hugodeploy preview
$ hugodeploy push
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Hugo Site is Launched</title>
      <link>https://tomanistor.com/posts/hugo-site-is-launched/</link>
      <pubDate>Thu, 30 Mar 2017 02:28:01 -0700</pubDate>
      
      <guid>https://tomanistor.com/posts/hugo-site-is-launched/</guid>
      <description>

&lt;p&gt;My new portfolio has officially been launched! This is my first static website built using Hugo. In my &lt;a href=&#34;https://tomanistor.com/content/post/starting-with-hugo&#34;&gt;previous post&lt;/a&gt;, I mapped out a few broad objectives for this project.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s take a look at the completed goals from a short while ago and review.&lt;/p&gt;

&lt;h2 id=&#34;objectives&#34;&gt;Objectives&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;del&gt;Create portfolio to display work&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;Create blog to jot down my progress and help others along the way&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;Implement design with SCSS&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;Design new Hugo theme and distribute for others to used&lt;/del&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;create-portfolio&#34;&gt;Create Portfolio&lt;/h2&gt;

&lt;p&gt;The portfolio has been created and published in place of my old portfolio site. Currently, projects are displayed under the &amp;ldquo;Work&amp;rdquo; section on the index page. The index page was constructed as a one-page template to display a hero header, gallery of web projects, a list of the 10 latest blog posts, and a contact form.&lt;/p&gt;

&lt;h2 id=&#34;create-blog&#34;&gt;Create Blog&lt;/h2&gt;

&lt;p&gt;The blog post links on the index page lead to their own individual pages. The majority of the blog was based off of the &lt;a href=&#34;https://github.com/davidhampgonsalves/hugo-black-and-light-theme&#34;&gt;Hugo Black and Light Theme&lt;/a&gt; by David Hamp-Gonsalves. Overall, it was a well-constructed, minimalist, text-only theme without any scripts or clutter. The blog has been slightly redesigned but there is a bit more customization work to be done.&lt;/p&gt;

&lt;h2 id=&#34;use-scss&#34;&gt;Use SCSS&lt;/h2&gt;

&lt;p&gt;My first major challenge was figuring out how to use &lt;a href=&#34;http://sass-lang.com/&#34;&gt;SCSS&lt;/a&gt; outside of a Ruby on Rails project, since my previous installations of SASS were as easy as typing &lt;code&gt;gem install sass&lt;/code&gt; in the terminal. Luckily, I found a fantastically thorough tutorial by Dan Bahrami: &lt;a href=&#34;http://danbahrami.io/articles/building-a-production-website-with-hugo-and-gulp-js/&#34;&gt;Building a production website with Hugo and GulpJS&lt;/a&gt;. This also marked my first exposure to &lt;a href=&#34;https://nodejs.org/en/&#34;&gt;Node.js&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;design-distribute-hugo-theme&#34;&gt;Design &amp;amp; Distribute Hugo Theme&lt;/h2&gt;

&lt;p&gt;While the theme I&amp;rsquo;ve constructed is fine to publish now and use myself, there is a ways to go to clean it up and optimize it before distributing to the Hugo community. This will be the most challenging objective that I still need to complete and requires more studying of Hugo and the correct syntax. However, I&amp;rsquo;m very close to finishing the design portion of the theme!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Starting with Hugo</title>
      <link>https://tomanistor.com/posts/starting-with-hugo/</link>
      <pubDate>Mon, 13 Mar 2017 23:03:31 -0700</pubDate>
      
      <guid>https://tomanistor.com/posts/starting-with-hugo/</guid>
      <description>

&lt;p&gt;I&amp;rsquo;m finally ditching &lt;a href=&#34;https://wordpress.org&#34;&gt;Wordpress&lt;/a&gt; and testing out new waters with &lt;a href=&#34;https://gohugo.io&#34;&gt;Hugo&lt;/a&gt;, the static site generator written in &lt;a href=&#34;https://golang.org&#34;&gt;Go&lt;/a&gt;. Go is a speedy programming language developed by Google.&lt;/p&gt;

&lt;p&gt;During this new chapter of my career as a web developer, I&amp;rsquo;ll be moving away from dynamically generated site builders and constructing my new portfolio from the ground up in order to practice and refine my web developing skills with &lt;strong&gt;JavaScript&lt;/strong&gt;, &lt;strong&gt;Go&lt;/strong&gt;, and &lt;strong&gt;SCSS&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&#34;objectives&#34;&gt;Objectives&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Create portfolio to display work&lt;/li&gt;
&lt;li&gt;Create blog to jot down my progress and help others along the way&lt;/li&gt;
&lt;li&gt;Implement design with SCSS&lt;/li&gt;
&lt;li&gt;Design new Hugo theme and distribute for others to used&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When this post is published, the four primary objectives of my new Hugo portfolio site should be complete.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>